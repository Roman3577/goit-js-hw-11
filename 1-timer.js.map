{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.getElementById(\"datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nlet userSelectedDate = null;\nlet timerId = null;\n\n\nstartButton.disabled = true;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction updateTimerInterface({ days, hours, minutes, seconds }) {\n  document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n  document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n  document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n  document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate > new Date()) {\n      startButton.disabled = false;\n    } else {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n        timeout: 3000,\n      });\n\n      startButton.disabled = true;\n    }\n  },\n});\n\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      startButton.disabled = true;\n      input.disabled = false;\n      updateTimerInterface({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    updateTimerInterface(time);\n  }, 1000);\n});"],"names":["input","startButton","userSelectedDate","timerId","addLeadingZero","value","convertMs","ms","updateTimerInterface","days","hours","minutes","seconds","flatpickr","selectedDates","iziToast","timeDifference","time"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAc,SAAS,cAAc,cAAc,EACzD,IAAIC,EAAmB,KACnBC,EAAU,KAGdF,EAAY,SAAW,GAEvB,SAASG,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA,CAEA,SAASC,EAAqB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC/D,SAAS,cAAc,aAAa,EAAE,YAAcR,EAAeK,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcL,EAAeM,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcP,EAAeQ,CAAO,CAC/E,CAGAC,EAAUb,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQc,EAAe,CACrBZ,EAAmBY,EAAc,CAAC,EAE9BZ,EAAmB,IAAI,KACzBD,EAAY,SAAW,IAEvBc,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,QAAS,GACjB,CAAO,EAEDd,EAAY,SAAW,GAE1B,CACH,CAAC,EAGDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAM,SAAW,GAEjBG,EAAU,YAAY,IAAM,CAE1B,MAAMa,EAAiBd,EADH,IAAI,KAGxB,GAAIc,GAAkB,EAAG,CACvB,cAAcb,CAAO,EACrBF,EAAY,SAAW,GACvBD,EAAM,SAAW,GACjBQ,EAAqB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAClE,MACD,CAED,MAAMS,EAAOX,EAAUU,CAAc,EACrCR,EAAqBS,CAAI,CAC1B,EAAE,GAAI,CACT,CAAC"}